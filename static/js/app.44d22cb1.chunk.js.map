{"version":3,"sources":["src/navigation/main.tsx","src/utils/types.ts","src/selectors/navigation.ts","src/navigation/config.web.ts","src/screens/Welcome/index.tsx","src/components/molecules/DefaultButton/index.tsx","src/components/molecules/DefaultButton/styles.ts","src/screens/Welcome/styles.ts","src/screens/Signup/index.tsx","src/screens/Signup/styles.ts","src/screens/Home/index.tsx","src/screens/Home/styles.ts","src/hooks/initial.ts","src/shared/react-native-bootsplash/index.web.ts","src/navigation/index.tsx","src/actions/authentication.ts","src/actions/navigation.ts","src/services/navigation.ts","index.web.js","src/components/hocs/WebWrapper.jsx","src/serviceWorkerRegistration.js","src/App.tsx","src/i18n/index.ts","src/i18n/languages/index.ts","src/store/index.ts","src/reducers/index.ts","src/reducers/authentication.ts","src/reducers/navigation.ts","src/reducers/user.ts","src/shared/react-native-fast-image/index.web.tsx"],"names":["SCREEN_NAMES","WELCOME","SIGNUP","HOME","MainStackScreenOptions","defaultConfig","options","MainStackProps","MainNavigation","createStackNavigator","props","initialScreenNavigation","useNavigationService","getValueByPath","Navigator","initialRouteName","screenOptions","Screen","name","component","require","default","obj","key","initialNavigation","createSelector","state","navigation","result","initialScreen","allNavigation","slideAnimation","current","next","inverted","screen","layouts","progress","Animated","add","interpolate","inputRange","outputRange","extrapolate","cardStyle","transform","translateX","multiply","width","animationEnabled","cardStyleInterpolator","withTheme","styles","useStyles","navigateService","useNavigation","handleOnPressDefaultbutton1","useRoute","navigate","Page","backgroundColor","safeArea","style","page_container","Image","resizeMode","source","image_1","View","view_1","Text","text_1","view_2","view_3","defaultbutton_1","title","onPress","handleButton1","molecule_container","Button","button_1","get","titleStyle","button_1_title","makeStyles","theme","brandingColors","primary","normalize","validationForm1Schema","useMemo","yup","object","shape","input_1","string","notRequired","input_2","formForm1","useForm","resolver","yupResolver","shouldFocusError","mode","reValidateMode","values","form_1","Controller","control","render","field","onChange","value","onBlur","fieldState","isTouched","error","Input","handleSubmit","Header","borderBottomColor","borderBottomWidth","leftIconSize","header_1","header_1_title","WebView","webview_1","useEffect","useCallback","RNBootSplash","hide","fade","option","getVisibilityStatus","onReady","navigationRef","useRef","routeNameRef","previousRouteNameRef","initialNavigationNavigation","Platform","OS","window","onhashchange","hash","target","location","replace","canGoBack","goBack","undefined","handleReady","getCurrentRoute","handleStateChange","previousRouteName","currentRouteName","mainNavigation","NavigationContainer","ref","onStateChange","MAIN","createPhoneNumberSessionRequest","createAction","createPhoneNumberSessionSuccess","createPhoneNumberSessionFailed","verifyPhoneNumberRequest","verifyPhoneNumberSuccess","verifyPhoneNumberFailed","loginWithGoogleRequest","loginWithGoogleSuccess","loginWithGoogleFailed","loginWithFacebookRequest","loginWithFacebookSuccess","loginWithFacebookFailed","loginWithAppleRequest","loginWithAppleSuccess","loginWithAppleFailed","authenticationWithEmailRequest","authenticationWithEmailSuccess","authenticationWithEmailFailed","signupWithEmailRequest","signupWithEmailSuccess","signupWithEmailFailed","setSessionIsCompleteRegistration","sessionLogout","setSession","setInitialNavigation","setInitialScreen","clearNavigation","setNavigation","dispatch","useDispatch","selector","getKeyValue","navigationSelectors","useSelector","path","getAll","setValue","registerRootComponent","webWrapper","App","serviceWorkerRegistration","unregister","useState","componentModal","showModal","isError","setError","timeoutInstall","isSafari","navigator","userAgent","match","iOS","test","MSStream","deferredPrompt","isMobile","resizeHandler","event","orientation","workerEventHandler","e","type","clearTimeout","setTimeout","standalone","ios_tip_container","ios_tip","ios_add_box","ios_tip_text","fontWeight","ios_share_icon","ios_icon","installAppHandler","preventDefault","prompt","userChoice","then","choiceResult","appInstallHandler","evt","addEventListener","innerWidth","innerHeight","removeEventListener","error_container","href","error_text","modalContainer","outside","blur","StyleSheet","create","height","display","paddingHorizontal","justifyContent","alignItems","zIndex","color","textAlign","fontSize","marginTop","position","bottom","borderRadius","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingTop","paddingRight","textAlignVertical","rotate","paddingBottom","top","left","config","URL","process","origin","swUrl","isLocalhost","fetch","headers","response","contentType","status","indexOf","serviceWorker","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","message","Boolean","hostname","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","dayjs","extend","relativeTime","enableScreens","secondary","SafeAreaView","ImageComponent","FastImage","initial","useAppInitial","Provider","store","PersistGate","loading","persistor","ThemeProvider","I18nextProvider","i18n","I18n","translucent","languageDetector","async","detect","callback","init","cacheUserLanguage","i18next","use","initReactI18next","fallbackLng","resources","debug","__DEV__","interpolation","escapeValue","persistConfig","storage","AsyncStorage","timeout","whitelist","persistedReducer","persistReducer","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","composed","applyMiddleware","apply","createStore","persistStore","appReducer","combineReducers","authentication","user","action","initialState","authenticatedData","authenteicated","isCompleteRegister","handlers","payload","authenticated","handleActions"],"mappings":"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","file":"static/js/app.44d22cb1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  RouteProp,\n} from '@react-navigation/native';\nimport useNavigationService from '@services/navigation';\nimport defaultConfig from \"@navigation/config\";\nimport type {\n  StackOptions,\n  StackProp,\n} from '@navigation/config';\nexport type MainScreenNameType = {\n  WELCOME: string,\n  SIGNUP: string,\n  HOME: string,\n}\nexport const SCREEN_NAMES: MainScreenNameType = {\n  WELCOME: 'Welcome',\n  SIGNUP: 'Signup',\n  HOME: 'Home',\n}\nconst MainStackScreenOptions: StackOptions = {\n  ...{\"headerShown\":false,\"gestureEnabled\":true},\n  ...defaultConfig.options,\n}\nconst MainStackProps = {\n}\ntype MainNavigationPropsType = {\n  navigation?: StackProp<any, 'MainStack'>;\n  route?: RouteProp<any, 'MainStack'>;\n}\nconst MainNavigation = defaultConfig.createStackNavigator();\nconst MainStack: React.FunctionComponent<MainNavigationPropsType> = (props: MainNavigationPropsType) => {\n  let initialRouteName;\n  \n  const navigationService = useNavigationService();\n  const initialScreenNavigation = navigationService.getValueByPath('initialScreen');\n  return (\n    <MainNavigation.Navigator\n      {...props}\n      {...MainStackProps}\n      initialRouteName={initialRouteName || initialScreenNavigation}\n      screenOptions={MainStackScreenOptions}>\n      <MainNavigation.Screen\n        options={{}}\n        name={SCREEN_NAMES.WELCOME}\n        component={require('@screens/Welcome').default}\n      />\n      <MainNavigation.Screen\n        options={{}}\n        name={SCREEN_NAMES.SIGNUP}\n        component={require('@screens/Signup').default}\n      />\n      <MainNavigation.Screen\n        options={{}}\n        name={SCREEN_NAMES.HOME}\n        component={require('@screens/Home').default}\n      />\n    </MainNavigation.Navigator>\n  )\n};\nexport default MainStack;\n","export const getKeyValue = <T, K extends keyof T>(obj: T, key: K): T[K] =>\n  obj[key];\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends Record<string, unknown>\n    ? // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      DeepPartial<T[P]>\n    : T[P];\n};\n","import { createSelector, OutputSelector } from 'reselect';\nimport { NavigationState } from '@reducers/navigation';\n\nexport type NavigationInitialNavigationSelectorResponse = OutputSelector<\n  any,\n  any,\n  (res: any) => string | null\n>;\nexport type NavigationInitialScreenSelectorResponse = OutputSelector<\n  any,\n  any,\n  (res: any) => string | null\n>;\nexport type NavigationSelectorResponse = OutputSelector<\n  any,\n  any,\n  (res: any) => NavigationState\n>;\n\nconst initialNavigation: NavigationInitialNavigationSelectorResponse =\n  createSelector(\n    (state: any) => state.navigation.initialNavigation,\n    (result: string | null) => result,\n  );\n\nconst initialScreen: NavigationInitialScreenSelectorResponse = createSelector(\n  (state: any) => state.navigation.initialScreen,\n  (result: string | null) => result,\n);\n\nexport const allNavigation: NavigationSelectorResponse = createSelector(\n  (state: any) => state.navigation,\n  (navigation: NavigationState) => navigation,\n);\n\nexport type NavigationSelectorType = {\n  initialNavigation: NavigationInitialNavigationSelectorResponse;\n  initialScreen: NavigationInitialScreenSelectorResponse;\n};\n\nconst selectors: NavigationSelectorType = {\n  initialNavigation,\n  initialScreen,\n};\n\nexport default selectors;\n","import { ParamListBase } from '@react-navigation/native';\nimport {\n  StackCardInterpolationProps,\n  StackNavigationOptions,\n  createStackNavigator,\n  StackNavigationProp,\n} from '@react-navigation/stack';\nimport { Animated } from 'react-native';\n\nexport const slideAnimation = ({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps) => {\n  const progress = Animated.add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0,\n  );\n\n  return {\n    cardStyle: {\n      transform: [\n        {\n          translateX: Animated.multiply(\n            progress.interpolate({\n              inputRange: [0, 1, 2],\n              outputRange: [screen.width, 0, screen.width * -0.3],\n              extrapolate: 'clamp',\n            }),\n            inverted,\n          ),\n        },\n      ],\n    },\n  };\n};\n\nexport default {\n  options: {\n    animationEnabled: true,\n    cardStyleInterpolator: slideAnimation,\n  },\n  createStackNavigator,\n};\n\nexport type StackOptions = StackNavigationOptions;\nexport type StackProp<\n  T extends ParamListBase,\n  N extends keyof T,\n> = StackNavigationProp<T, N>;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport get from 'lodash/get';\nimport DefaultButton from '@components/molecules/DefaultButton'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport {Page,\nImage,\nView,\nText,\nTheme,\nwithTheme} from '@jitera/jitera-rn-ui-library'\nimport {SCREEN_NAMES} from '@navigation/index'\nimport useStyles from './styles';\ntype WelcomePageProps = {\n  theme?: Theme}\nfunction WelcomePage (props: WelcomePageProps): JSX.Element {\n  const styles = useStyles();\n  const navigateService = useNavigation()\nconst appRoutes = useRoute()\n  \n  const handleOnPressDefaultbutton1 = async () => {\nnavigateService.navigate(SCREEN_NAMES.SIGNUP as never)\n}\n  return (\n    <Page backgroundColor={'#FFFFFF'} safeArea style={styles.page_container} ><Image resizeMode={'cover'} source={'https://picsum.photos/600/600'} style={styles.image_1} /><View style={styles.view_1} ><Text style={styles.text_1} >{'===== Welcome ====='}</Text><View style={styles.view_2} ><View style={styles.view_3} ><DefaultButton style={styles.defaultbutton_1} title={'Login'} onPress={handleOnPressDefaultbutton1} /></View></View></View></Page>  );\n}\nexport default withTheme(WelcomePage, 'WelcomePage');\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport get from 'lodash/get';\nimport {ViewStyle} from 'react-native'\nimport {View,\nButton,\nTheme,\nwithTheme} from '@jitera/jitera-rn-ui-library'\nimport useStyles from './styles';\ntype DefaultButtonMoleculeProps = {\n  theme?: Theme,style?: ViewStyle,title?: string,onPress?: () => any}\nfunction DefaultButtonMolecule (props: DefaultButtonMoleculeProps): JSX.Element {\n  const styles = useStyles();\n  \n  \n  const handleButton1 = async () => {\n        const { onPress,  } = props\n        return onPress && onPress()\n      \n}\n  return (\n    <View style={[styles.molecule_container, props.style]} ><Button style={styles.button_1} title={get(props, 'title')} titleStyle={styles.button_1_title} onPress={handleButton1} /></View>  );\n}\nexport default withTheme(DefaultButtonMolecule, 'DefaultButtonMolecule');\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeStyles, Theme, normalize } from '@jitera/jitera-rn-ui-library';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: Theme) => ({\n  \"molecule_container\": {\n    \"width\": \"100%\"\n  },\n  \"button_1\": {\n    \"backgroundColor\": theme?.brandingColors?.primary,\n    \"borderColor\": \"transparent\",\n    \"borderRadius\": normalize(12),\n    \"borderWidth\": normalize(1),\n    \"height\": normalize(50),\n    \"paddingBottom\": normalize(10),\n    \"paddingTop\": normalize(10)\n  },\n  \"button_1_title\": {\n    \"color\": \"#FFFFFF\",\n    \"fontSize\": normalize(16),\n    \"fontWeight\": \"400\"\n  }\n}));\nexport default useStyles;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeStyles, Theme, normalize } from '@jitera/jitera-rn-ui-library';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: Theme) => ({\n  \"page_container\": {\n    \"flex\": 1\n  },\n  \"image_1\": {\n    \"height\": \"100%\",\n    \"position\": \"absolute\",\n    \"top\": normalize(0),\n    \"width\": \"100%\"\n  },\n  \"view_1\": {\n    \"alignItems\": \"center\",\n    \"backgroundColor\": \"transparent\",\n    \"height\": \"100%\",\n    \"justifyContent\": \"center\",\n    \"width\": \"100%\"\n  },\n  \"text_1\": {\n    \"color\": \"#ffffff\",\n    \"fontSize\": normalize(16),\n    \"fontWeight\": \"bold\",\n    \"textAlign\": \"auto\"\n  },\n  \"view_2\": {\n    \"backgroundColor\": \"transparent\",\n    \"width\": \"100%\"\n  },\n  \"view_3\": {\n    \"backgroundColor\": \"transparent\",\n    \"marginLeft\": normalize(20),\n    \"marginRight\": normalize(20)\n  },\n  \"defaultbutton_1\": {\n    \"marginTop\": normalize(12),\n    \"width\": \"100%\"\n  }\n}));\nexport default useStyles;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport get from 'lodash/get';\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport {Page,\nImage,\nView,\nInput,\nButton,\nTheme,\nwithTheme} from '@jitera/jitera-rn-ui-library'\nimport {SCREEN_NAMES} from '@navigation/index'\nimport useStyles from './styles';\ntype SignupPageProps = {\n  theme?: Theme}\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Form1FormData {\ninput_1?: string\ninput_2?: string\n}\nfunction SignupPage (props: SignupPageProps): JSX.Element {\n  const styles = useStyles();\n  const navigateService = useNavigation()\nconst appRoutes = useRoute()\n  const validationForm1Schema = useMemo(() => (\nyup.object().shape({\ninput_1: yup.string().notRequired(),\ninput_2: yup.string().notRequired(),\n})), [])\n        const formForm1 = useForm<Form1FormData>({\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          resolver: yupResolver(validationForm1Schema),\n          shouldFocusError: true,\n          mode: 'onChange',\n          reValidateMode: 'onChange',\n        });\n      \n  const handleButton1 = async (values?: Form1FormData) => {\nnavigateService.navigate(SCREEN_NAMES.HOME as never)\n}\n  return (\n    <Page backgroundColor={'#FFFFFF'} safeArea style={styles.page_container} ><Image resizeMode={'cover'} source={'https://picsum.photos/600/600'} style={styles.image_1} /><View style={styles.view_1} ><View style={styles.form_1} >\n        <Controller\n          control={formForm1.control}\n          render={({ field: { onChange, onBlur, value }, fieldState: { isTouched, error } }: any) => {\n            return (\n              <Input   onChange={onChange} value={value} />\n            );\n          }}\n          name='input_1'\n        />\n      \n        <Controller\n          control={formForm1.control}\n          render={({ field: { onChange, onBlur, value }, fieldState: { isTouched, error } }: any) => {\n            return (\n              <Input  style={styles.input_2}  onChange={onChange} value={value} />\n            );\n          }}\n          name='input_2'\n        />\n      <Button style={styles.button_1} title={'Submit'} titleStyle={styles.button_1_title} onPress={formForm1.handleSubmit(handleButton1)} /></View></View></Page>  );\n}\nexport default withTheme(SignupPage, 'SignupPage');\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeStyles, Theme, normalize } from '@jitera/jitera-rn-ui-library';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: Theme) => ({\n  \"page_container\": {\n    \"flex\": 1\n  },\n  \"image_1\": {\n    \"height\": \"100%\",\n    \"position\": \"absolute\",\n    \"width\": \"100%\"\n  },\n  \"view_1\": {\n    \"backgroundColor\": \"transparent\",\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  },\n  \"form_1\": {\n    \"flex\": 1,\n    \"paddingLeft\": normalize(16),\n    \"paddingRight\": normalize(16),\n    \"paddingTop\": normalize(24)\n  },\n  \"input_2\": {\n    \"marginTop\": normalize(16)\n  },\n  \"button_1\": {\n    \"backgroundColor\": \"#275A8C\",\n    \"borderColor\": \"transparent\",\n    \"borderRadius\": normalize(12),\n    \"borderWidth\": normalize(1),\n    \"height\": normalize(50),\n    \"marginTop\": normalize(24),\n    \"paddingBottom\": normalize(10),\n    \"paddingTop\": normalize(10)\n  },\n  \"button_1_title\": {\n    \"color\": \"#FFFFFF\",\n    \"fontSize\": normalize(16),\n    \"fontWeight\": \"400\"\n  }\n}));\nexport default useStyles;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport get from 'lodash/get';\nimport {Page,\nHeader,\nWebView,\nTheme,\nwithTheme} from '@jitera/jitera-rn-ui-library'\nimport useStyles from './styles';\ntype HomePageProps = {\n  theme?: Theme}\nfunction HomePage (props: HomePageProps): JSX.Element {\n  const styles = useStyles();\n  \n  \n  \n  return (\n    <Page backgroundColor={'#FFFFFF'} safeArea style={styles.page_container} ><Header borderBottomColor={'#00000010'} borderBottomWidth={1.0}   leftIconSize={24} style={styles.header_1} title={'Home'} titleStyle={styles.header_1_title} /><WebView source={'https://reactjs.org'} style={styles.webview_1} /></Page>  );\n}\nexport default withTheme(HomePage, 'HomePage');\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeStyles, Theme, normalize } from '@jitera/jitera-rn-ui-library';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: Theme) => ({\n  \"page_container\": {\n    \"flex\": 1\n  },\n  \"header_1\": {\n    \"height\": normalize(70)\n  },\n  \"header_1_title\": {\n    \"color\": \"#000000\",\n    \"fontSize\": normalize(16),\n    \"fontWeight\": \"600\"\n  },\n  \"webview_1\": {\n    \"height\": \"100%\",\n    \"width\": \"100%\"\n  }\n}));\nexport default useStyles;\n","import { useEffect, useCallback } from \"react\";\nimport RNBootSplash from \"@shared/react-native-bootsplash\";\nexport default function useAppInitial() {\n  useEffect(() => {\n  \n  \n  }, []);\n  // TODO: something need to load after navigation is ready\n  const init = useCallback(async () => {\n    RNBootSplash.hide({ fade: true });\n  }, []);\n  return init;\n}\n","type VisibilityStatus = \"visible\" | \"hidden\" | \"transitioning\";\ntype Config = {\n  fade?: boolean;\n};\n\nexport default {\n  hide: (option?: Config) => {},\n  getVisibilityStatus: (): VisibilityStatus => \"hidden\",\n};\n","import React, { useMemo, useRef, useEffect, useCallback } from 'react';\nimport { Platform } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport RNBootSplash from 'react-native-bootsplash';\nimport Main, {\n  SCREEN_NAMES as MAIN,\n  MainScreenNameType,\n} from \"@navigation/main\";\nimport useNavigationService from '@services/navigation';\ntype NavigationScreenNameType = { [key: string]: string } & \n  MainScreenNameType\nexport const SCREEN_NAMES: NavigationScreenNameType = {\n  ...MAIN,\n}\ntype FlowNameType = {\n  MAIN: string;\n}\nexport const FLOW_NAMES: FlowNameType = {\n    MAIN: 'Main',\n}\nexport default function Navigator({\n  onReady,\n}: {\n  onReady: () => void;\n}): JSX.Element {\n  const navigationRef: any = useRef();\n  const routeNameRef: any = useRef();\n  const previousRouteNameRef: any = useRef();\n  const navigationService = useNavigationService();\n  const initialNavigationNavigation = navigationService.getValueByPath('initialNavigation');\n  useEffect(() => {\n    // @ts-ignore\n    if (Platform.OS === 'web' && typeof window === 'object') {\n      // @ts-ignore\n      window.onhashchange = ({ target }) => {\n        const hash = `${target.location.hash}`.replace('#/', '');\n        if (\n          navigationRef.current &&\n          navigationRef.current.canGoBack() &&\n          hash !== routeNameRef.current &&\n          routeNameRef.current !== previousRouteNameRef.current\n        ) {\n          navigationRef.current.goBack();\n        }\n      };\n    }\n    return () => {\n      // @ts-ignore\n      if (Platform.OS === 'web' && typeof window === 'object') {\n        // @ts-ignore\n        window.onhashchange = undefined;\n      }\n    };\n  }, []);\n  const handleReady = useCallback(() => {\n    onReady && onReady();\n    routeNameRef.current = navigationRef.current?.getCurrentRoute()?.name;\n  }, [onReady]);\n  const handleStateChange = useCallback(async () => {\n    const previousRouteName = routeNameRef.current;\n    const currentRouteName = navigationRef.current?.getCurrentRoute()?.name;\n    if (previousRouteName !== currentRouteName) {\n      \n      // @ts-ignore\n      if (Platform.OS === 'web' && typeof window === 'object') {\n        // @ts-ignore\n        window.location.hash = `/${currentRouteName}`;\n      }\n    }\n    previousRouteNameRef.current = previousRouteName;\n    routeNameRef.current = currentRouteName;\n  }, []);\n  const mainNavigation = useMemo(() => {\n    if (\n      initialNavigationNavigation === 'Main' \n    ) {\n      return <Main />;\n    }\n    return <Main />;  }, [\n    initialNavigationNavigation,\n  ]);\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      onReady={handleReady}\n      onStateChange={handleStateChange}>\n      {mainNavigation}\n    </NavigationContainer>\n  );\n};\n","import { createAction, ActionFunctionAny, Action } from 'redux-actions';\n\nexport const createPhoneNumberSessionRequest: ActionFunctionAny<Action<undefined>> =\n  createAction('CREATE_PHONE_NUMBER_SESSION_REQUEST');\nexport const createPhoneNumberSessionSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('CREATE_PHONE_NUMBER_SESSION_SUCCESS');\nexport const createPhoneNumberSessionFailed: ActionFunctionAny<Action<undefined>> =\n  createAction('CREATE_PHONE_NUMBER_SESSION_FAILED');\n\nexport const verifyPhoneNumberRequest: ActionFunctionAny<Action<undefined>> =\n  createAction('VERIFY_PHONE_NUMBER_REQUEST');\nexport const verifyPhoneNumberSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('VERIFY_PHONE_NUMBER_SUCCESS');\nexport const verifyPhoneNumberFailed: ActionFunctionAny<Action<undefined>> =\n  createAction('VERIFY_PHONE_NUMBER_FAILED');\n\nexport const loginWithGoogleRequest: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_GOOGLE_REQUEST');\nexport const loginWithGoogleSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('LOGIN_WITH_GOOGLE_SUCCESS');\nexport const loginWithGoogleFailed: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_GOOGLE_FAILED');\n\nexport const loginWithFacebookRequest: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_FACEBOOK_REQUEST');\nexport const loginWithFacebookSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('LOGIN_WITH_FACEBOOK_SUCCESS');\nexport const loginWithFacebookFailed: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_FACEBOOK_FAILED');\n\nexport const loginWithAppleRequest: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_APPLE_REQUEST');\nexport const loginWithAppleSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('LOGIN_WITH_APPLE_SUCCESS');\nexport const loginWithAppleFailed: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGIN_WITH_APPLE_FAILED');\n\nexport const authenticationWithEmailRequest: ActionFunctionAny<\n  Action<undefined>\n> = createAction('AUTHENTICATION_WITH_EMAIL_REQUEST');\nexport const authenticationWithEmailSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('AUTHENTICATION_WITH_EMAIL_SUCCESS');\nexport const authenticationWithEmailFailed: ActionFunctionAny<\n  Action<undefined>\n> = createAction('AUTHENTICATION_WITH_EMAIL_FAILED');\n\nexport const signupWithEmailRequest: ActionFunctionAny<\n  Action<undefined>\n> = createAction('SIGN_UP_WITH_EMAIL_REQUEST');\nexport const signupWithEmailSuccess: ActionFunctionAny<\n  Action<AuthenticationPayLoad>\n> = createAction('SIGN_UP_WITH_EMAIL_SUCCESS');\nexport const signupWithEmailFailed: ActionFunctionAny<\n  Action<undefined>\n> = createAction('SIGN_UP_WITH_EMAIL_FAILED');\n\nexport const setSessionIsCompleteRegistration: ActionFunctionAny<\n  Action<boolean>\n> = createAction('SET_SESSION_IS_COMPLETE_REGISTRATION');\n\nexport const sessionLogout: ActionFunctionAny<Action<undefined>> =\n  createAction('LOGOUT');\n\nexport const setSession: ActionFunctionAny<Action<SessionPayLoad>> =\n  createAction('SET_SESSION');\n\nexport interface AuthenticationPayLoad {\n  authenticatedData?: any;\n  authenticated?: boolean;\n}\n\nexport interface SessionPayLoad {\n  key: string;\n  value?: any;\n}\n","import { createAction, ActionFunctionAny, Action } from 'redux-actions';\n\nexport const setInitialNavigation: ActionFunctionAny<Action<string>> =\n  createAction('SET_INITIAL_NAVIGATION');\nexport const setInitialScreen: ActionFunctionAny<Action<string>> =\n  createAction('SET_INITIAL_SCREEN');\nexport const clearNavigation: ActionFunctionAny<Action<undefined>> =\n  createAction('CLEAR_NAVIGATION');\n\nexport const setNavigation: ActionFunctionAny<Action<NavigationPayLoad>> =\n  createAction('SET_SESSION');\n\nexport interface NavigationPayLoad {\n  key: string;\n  value?: any;\n}\n","import get from 'lodash/get';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getKeyValue } from '@utils/types';\nimport {\n  setNavigation,\n  clearNavigation,\n  setInitialScreen,\n  setInitialNavigation,\n} from '@actions/navigation';\nimport navigationSelectors, {\n  allNavigation,\n  NavigationSelectorType,\n} from '@selectors/navigation';\n\nexport default function useNavigationService(): NavigationServiceType {\n  const dispatch = useDispatch();\n\n  return {\n    get: (key: keyof NavigationSelectorType) => {\n      const selector: any = getKeyValue(navigationSelectors, key);\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useSelector(selector);\n    },\n    getValueByPath: (path: string) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return get(useSelector(allNavigation), path);\n    },\n    getAll: () => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useSelector(allNavigation);\n    },\n    setValue: (key: string, value: any) => {\n      dispatch(setNavigation({ key, value }));\n    },\n    setInitialScreen: (screen: string) => {\n      dispatch(setInitialScreen(screen));\n    },\n    setInitialNavigation: (screen: string) => {\n      dispatch(setInitialNavigation(screen));\n    },\n    clearNavigation: () => {\n      dispatch(clearNavigation());\n    },\n  };\n}\n\nexport type NavigationServiceType = {\n  get: (key: keyof NavigationSelectorType) => any;\n  getValueByPath: (path: string) => any;\n  getAll: () => any;\n  setValue: (key: string, value: any) => void;\n  setInitialScreen: (screen: string) => void;\n  setInitialNavigation: (screen: string) => void;\n  clearNavigation: () => void;\n};\n","import { registerRootComponent } from 'expo';\nimport webWrapper from \"@components/hocs/WebWrapper\";\n\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nimport App from './src/App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(webWrapper(App));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n","import React, { useEffect, useState, useRef } from 'react';\nimport QRCode from 'react-qr-code';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\n\nexport default App => {\n  return props => {\n    const [componentModal, showModal] = useState(null);\n    const [isError, setError] = useState(false);\n    const timeoutInstall = useRef(null);\n    const isSafari = !!navigator.userAgent.match(/Version\\/[\\d\\.]+.*Safari/);\n    const iOS =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n    useEffect(() => {\n      let deferredPrompt;\n      const isMobile =\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent,\n        );\n\n      const resizeHandler = event => {\n        setError(\n          !isMobile ||\n            !(window.orientation === 0 || window.orientation === 360),\n        );\n      };\n\n      const workerEventHandler = e => {\n        if (e.type === 'WORKER_SUCCESS') {\n          clearTimeout(timeoutInstall.current);\n          timeoutInstall.current = setTimeout(async () => {\n            if (isSafari && iOS && !window.navigator.standalone) {\n              return showModal(\n                <View style={styles.ios_tip_container}>\n                  <View style={styles.ios_tip}>\n                    <MaterialIcons name=\"add-box\" style={styles.ios_add_box} />\n                    <Text style={styles.ios_tip_text}>\n                      Install{' '}\n                      <Text style={{ fontWeight: 'bold' }}>the App</Text> to\n                      your iphone: tap\n                      <Feather name=\"share\" style={styles.ios_share_icon} /> and\n                      then{' '}\n                      <Text style={{ fontWeight: 'bold' }}>\n                        Add to Home Screen\n                      </Text>\n                    </Text>\n                  </View>\n                  <View style={styles.ios_icon} />\n                </View>,\n              );\n            }\n          }, 200);\n        }\n      };\n\n      const installAppHandler = e => {\n        // Prevent the mini-infobar from appearing on mobile\n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        deferredPrompt = e;\n        // Update UI notify the user they can install the PWA\n        clearTimeout(timeoutInstall.current);\n        timeoutInstall.current = setTimeout(async () => {\n          deferredPrompt.prompt();\n          // Wait for the user to respond to the prompt\n          deferredPrompt.userChoice.then(choiceResult => {\n            // TODO: handle if user accepted to install PWA choiceResult.outcome === 'accepted'\n          });\n        }, 1000);\n      };\n\n      const appInstallHandler = evt => {\n        // TODO: handle after app installed\n      };\n\n      if (typeof window === 'object') {\n        window.addEventListener('beforeinstallprompt', installAppHandler);\n        window.addEventListener('WORKER_SUCCESS', workerEventHandler);\n        window.addEventListener('orientationchange', resizeHandler, false);\n        window.addEventListener('appinstalled', appInstallHandler);\n        setError(!isMobile || window.innerWidth > window.innerHeight);\n      }\n\n      return () => {\n        if (typeof window === 'object') {\n          window.removeEventListener('beforeinstallprompt', installAppHandler);\n          window.removeEventListener('WORKER_SUCCESS', workerEventHandler);\n          window.removeEventListener('orientationchange', resizeHandler);\n          window.removeEventListener('appinstalled', appInstallHandler);\n        }\n      };\n    }, []);\n\n    const renderModal = () => {\n      if (!componentModal) {\n        return null;\n      }\n      return (\n        <View style={styles.modalContainer}>\n          <TouchableOpacity\n            onPress={() => showModal(null)}\n            style={styles.outside}>\n            <View style={styles.blur} />\n          </TouchableOpacity>\n          {componentModal}\n        </View>\n      );\n    };\n\n    const renderInner = () => {\n      if (!isError) {\n        return <App {...props} />;\n      }\n      return (\n        <View style={styles.error_container}>\n          <QRCode value={window.location.href} />\n          <Text style={styles.error_text}>\n            Scan it with your mobile device, recommended safari for ios and default browser for android\n          </Text>\n        </View>\n      );\n    };\n\n    return (\n      <>\n        {renderInner()}\n        {renderModal()}\n      </>\n    );\n  };\n};\n\nconst styles = StyleSheet.create({\n  error_container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    paddingHorizontal: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f7f8fa',\n    zIndex: 2,\n  },\n  error_text: {\n    color: '#31373a',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 15,\n  },\n  ios_tip_container: {\n    width: '100%',\n    height: 100,\n    position: 'absolute',\n    bottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  ios_tip: {\n    width: 'calc(100% - 20px)',\n    backgroundColor: '#C9CED4',\n    zIndex: 2,\n    borderRadius: 6,\n    display: 'flex',\n    flexDirection: 'row',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  ios_add_box: {\n    color: '#7E8C8D',\n    fontSize: 40,\n    paddingTop: 5,\n    paddingRight: 5,\n  },\n  ios_share_icon: {\n    color: '#87ADE7',\n    fontSize: 20,\n    display: 'inline',\n    textAlignVertical: 'sub',\n    paddingHorizontal: 10,\n  },\n  ios_icon: {\n    zIndex: 1,\n    backgroundColor: '#C9CED4',\n    width: 40,\n    height: 40,\n    transform: [\n      {\n        rotate: '45deg',\n      },\n    ],\n    marginTop: -30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  ios_tip_text: { paddingTop: 10, paddingBottom: 10 },\n  outside: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    width: '100%',\n    height: '100%',\n  },\n  blur: {\n    width: '100%',\n    height: '100%',\n    'backdrop-filter': 'saturate(180%) blur(6px)',\n    'background-color': 'rgba(255, 255, 255, 0.15)',\n  },\n  modalContainer: {\n    zIndex: 99,\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport { StatusBar, Platform } from \"react-native\";\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { I18n } from '@i18n/index';\nimport { I18nextProvider } from 'react-i18next';\nimport { enableScreens } from 'react-native-screens';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from '@store/index';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport FastImage from '@shared/react-native-fast-image';\nimport { ThemeProvider } from '@jitera/jitera-rn-ui-library';\nimport AppNavigator from '@navigation/index';\nimport useAppInitial from '@hooks/initial'\ndayjs.extend(relativeTime);\nenableScreens();\nconst theme = {\n  // TODO: default custom theme: colors, font family, button style, etc\n  brandingColors: {\n    primary: '#f08a4b',\n    secondary: '#577590',\n  },\n  Page: {\n    SafeAreaView: SafeAreaView\n  },\n  Image: {\n    ImageComponent: FastImage\n  }\n};\nconst App = (): JSX.Element => {\n  const initial = useAppInitial();\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider safeArea theme={theme}>\n          <I18nextProvider i18n={I18n}>\n            <StatusBar translucent backgroundColor=\"transparent\" />\n            <AppNavigator onReady={initial} />\n            \n          </I18nextProvider>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\nexport default App;\n","import { initReactI18next } from 'react-i18next';\nimport i18next, { LanguageDetectorAsyncModule } from 'i18next';\nimport * as resources from '@i18n/languages';\nconst defaultLanguage = 'en';\ninterface DetectCallback {\n  (message: string): void;\n}\nconst languageDetector: LanguageDetectorAsyncModule = {\n  type: 'languageDetector',\n  async: true,\n  detect: (callback: DetectCallback) => callback(defaultLanguage),\n  init: () => {},\n  cacheUserLanguage: () => {},\n};\ni18next\n  .use(languageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: defaultLanguage,\n    resources: resources.default,\n    debug: __DEV__ === true,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\nexport const I18n = i18next;\n","\nexport default {\n};\n","import {\n  applyMiddleware,\n  compose,\n  legacy_createStore as createStore,\n} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport rootReducer from '@reducers/index';\nimport { createLogger } from 'redux-logger';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\ndeclare const window: any;\n\nconst persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  timeout: 0,\n  whitelist: ['session', 'navigation'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares: Array<any> = [];\nif (__DEV__) {\n  middleWares.push(createLogger({}));\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composed = [applyMiddleware(...middleWares)];\n\nexport const store = createStore(\n  persistedReducer,\n  {},\n  composeEnhancers(...composed),\n);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const persistor = persistStore(store);\n","import { combineReducers } from 'redux';\nimport { sessionLogout } from '@actions/authentication';\nimport authentication, { AuthenticationState } from './authentication';\nimport navigation, { NavigationState } from './navigation';\nimport payments, { PaymentState } from './payments';\n\nimport user, { UserState } from '@reducers/user';\n\nconst appReducer = combineReducers({\n  authentication,\n  \n  navigation,\n  \n    user,\n  \n});\n\nconst rootReducer = (state: any, action: any) => {\n  if (action.type === `${sessionLogout}`) {\n    return undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport interface RootState {\n  session: AuthenticationState;\n  \n  navigation: NavigationState;\n  \n    user: UserState;\n  \n}\n\nexport default rootReducer;\n","import {\n  setSession,\n  sessionLogout,\n  SessionPayLoad,\n  AuthenticationPayLoad,\n  createPhoneNumberSessionFailed,\n  createPhoneNumberSessionRequest,\n  createPhoneNumberSessionSuccess,\n  verifyPhoneNumberRequest,\n  verifyPhoneNumberSuccess,\n  verifyPhoneNumberFailed,\n  setSessionIsCompleteRegistration,\n  loginWithGoogleRequest,\n  loginWithGoogleSuccess,\n  loginWithGoogleFailed,\n  loginWithFacebookRequest,\n  loginWithFacebookSuccess,\n  loginWithFacebookFailed,\n  loginWithAppleRequest,\n  loginWithAppleSuccess,\n  loginWithAppleFailed,\n  authenticationWithEmailRequest,\n  authenticationWithEmailSuccess,\n  authenticationWithEmailFailed,\n  signupWithEmailRequest,\n  signupWithEmailSuccess,\n  signupWithEmailFailed,\n} from '@actions/authentication';\nimport { handleActions, Action } from 'redux-actions';\n\nexport interface AuthenticationState {\n  loading: boolean;\n  authenticatedData: any | null;\n  authenteicated: boolean;\n  isCompleteRegister: boolean;\n}\n\nconst initialState: AuthenticationState = {\n  loading: false,\n  authenticatedData: null,\n  authenteicated: false,\n  isCompleteRegister: false,\n};\n\nconst handlers = {\n  [`${sessionLogout}`]: () => initialState,\n  [`${createPhoneNumberSessionRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${createPhoneNumberSessionSuccess}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${createPhoneNumberSessionFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${signupWithEmailRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${signupWithEmailSuccess}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${signupWithEmailFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${verifyPhoneNumberRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${verifyPhoneNumberSuccess}`]: (\n    state: AuthenticationState,\n    action: Action<AuthenticationPayLoad>,\n  ) => ({\n    ...state,\n    authenticatedData: action.payload.authenticatedData,\n    authenticated: action.payload.authenticated,\n    loading: false,\n  }),\n  [`${verifyPhoneNumberFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${loginWithGoogleRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${loginWithGoogleSuccess}`]: (\n    state: AuthenticationState,\n    action: Action<AuthenticationPayLoad>,\n  ) => ({\n    ...state,\n    authenticatedData: action.payload.authenticatedData,\n    authenticated: action.payload.authenticated,\n    loading: false,\n  }),\n  [`${loginWithGoogleFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${loginWithFacebookRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${loginWithFacebookSuccess}`]: (\n    state: AuthenticationState,\n    action: Action<AuthenticationPayLoad>,\n  ) => ({\n    ...state,\n    authenticatedData: action.payload.authenticatedData,\n    authenticated: action.payload.authenticated,\n    loading: false,\n  }),\n  [`${loginWithFacebookFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${loginWithAppleRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${loginWithAppleSuccess}`]: (\n    state: AuthenticationState,\n    action: Action<AuthenticationPayLoad>,\n  ) => ({\n    ...state,\n    authenticatedData: action.payload.authenticatedData,\n    authenticated: action.payload.authenticated,\n    loading: false,\n  }),\n  [`${loginWithAppleFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${authenticationWithEmailRequest}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: true,\n  }),\n  [`${authenticationWithEmailSuccess}`]: (\n    state: AuthenticationState,\n    action: Action<AuthenticationPayLoad>,\n  ) => ({\n    ...state,\n    authenticatedData: action.payload.authenticatedData,\n    authenticated: action.payload.authenticated,\n    loading: false,\n  }),\n  [`${authenticationWithEmailFailed}`]: (state: AuthenticationState) => ({\n    ...state,\n    loading: false,\n  }),\n  [`${setSessionIsCompleteRegistration}`]: (\n    state: AuthenticationState,\n    action: Action<any>,\n  ) => ({\n    ...state,\n    isCompleteRegister: action.payload,\n  }),\n  [`${setSession}`]: (\n    state: AuthenticationState,\n    action: Action<SessionPayLoad | any>,\n  ) => ({\n    ...state,\n    [action.payload.key]: action.payload.value,\n  }),\n};\n\nexport default handleActions(handlers, initialState);\n","import {\n  setNavigation,\n  clearNavigation,\n  setInitialScreen,\n  setInitialNavigation,\n  NavigationPayLoad,\n} from '@actions/navigation';\nimport { handleActions, Action } from 'redux-actions';\n\nexport interface NavigationState {\n  initialNavigation: string | null;\n  initialScreen: string | null;\n}\n\nconst initialState: NavigationState = {\n  initialNavigation: null,\n  initialScreen: null,\n};\n\nconst handlers = {\n  [`${clearNavigation}`]: () => initialState,\n  [`${setNavigation}`]: (\n    state: NavigationState,\n    action: Action<NavigationPayLoad | any>,\n  ) => ({\n    ...state,\n    loading: true,\n    [action.payload.key]: [action.payload.value],\n  }),\n  [`${setInitialScreen}`]: (\n    state: NavigationState,\n    action: Action<string>,\n  ) => ({\n    ...state,\n    initialScreen: action.payload,\n  }),\n  [`${setInitialNavigation}`]: (\n    state: NavigationState,\n    action: Action<string>,\n  ) => ({\n    ...state,\n    initialScreen: '',\n    initialNavigation: action.payload,\n  }),\n};\n\nexport default handleActions(handlers, initialState);\n","import {\n  \n  \n} from '@actions/user';\nimport { handleActions } from 'redux-actions';\n\nexport type ActionPayload<T> = {\n  payload: T;\n}\n\nexport interface UserState {\n  \n  \n  loading: boolean;\n}\n\nconst initialState: UserState = {\n  loading: false,\n};\n\nconst handlers = {\n  \n  \n}\n\nexport default handleActions(handlers, initialState);\n\n","import { Image, ImageProps } from \"react-native\";\n\nexport default Image;\nexport type { ImageProps };\n"],"sourceRoot":""}